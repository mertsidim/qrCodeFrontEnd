{"version":3,"sources":["./src/app/static-qr/static-qr.component.html","./src/app/static-qr/static-qr-routing.module.ts","./src/app/static-qr/static-qr.component.scss","./src/app/static-qr/static-qr.component.ts","./src/app/static-qr/static-qr.module.ts"],"names":[],"mappings":"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","file":"static-qr-static-qr-module.js","sourcesContent":["export default \"<mat-card style=\\\"box-shadow:none;\\\">\\n    <mat-card-title>QR Code</mat-card-title>\\n    <mat-card-subtitle>QR Kodunuzu Ãœretin</mat-card-subtitle>\\n    <mat-card-content>\\n        <div gdAreas=\\\"side content\\\" gdGap=\\\"16px\\\" gdRows=\\\"auto auto\\\" gdAreas.lt-md=\\\"side | content\\\"\\n            gdRows.lt-md=\\\"auto auto\\\">\\n            <div gdArea=\\\"side\\\">\\n                <mat-tab-group [selectedIndex]=\\\"tabIndex\\\" (selectedIndexChange)=\\\"tabIndex = $event\\\" mat-stretch-tabs>\\n                    <mat-tab label=\\\"Text\\\">\\n                        <form [formGroup]=\\\"textFormGroup\\\" style=\\\"padding: 5px\\\">\\n                            <mat-form-field style=\\\"width: 100%;\\\">\\n                                <textarea matInput name=\\\"text\\\" placeholder=\\\"Text\\\" formControlName=\\\"text\\\"\\n                                    (keyup)=\\\"onLinkClick(); qrCode = textFormGroup.controls.text.value;\\\">\\n                                    </textarea>\\n                            </mat-form-field>\\n                        </form>\\n                    </mat-tab>\\n                    <mat-tab label=\\\"URL\\\">\\n                        <form [formGroup]=\\\"urlFormGroup\\\" style=\\\"padding: 5px\\\">\\n                            <mat-form-field style=\\\"width: 100%;\\\">\\n                                <input matInput name=\\\"url\\\" type=\\\"url\\\" placeholder=\\\"URL\\\" formControlName=\\\"url\\\"\\n                                    (keyup)=\\\"onLinkClick(); qrCode = urlFormGroup.controls.url.valid ? urlFormGroup.controls.url.value : null;\\\">\\n                                <mat-error\\n                                    *ngIf=\\\"!urlFormGroup.controls.url.valid && urlFormGroup.controls.url.touched\\\">\\n                                    URL is invalid\\n                                </mat-error>\\n                            </mat-form-field>\\n                        </form>\\n                    </mat-tab>\\n                    <mat-tab label=\\\"Email\\\">\\n                        <form [formGroup]=\\\"emailFormGroup\\\" style=\\\"margin-top: 5px; padding: 5px;\\\">\\n                            <mat-form-field style=\\\"width: 100%;\\\">\\n                                <input matInput name=\\\"email\\\" type=\\\"email\\\" placeholder=\\\"Email\\\" formControlName=\\\"email\\\"\\n                                    (keyup)=\\\"onLinkClick(); emailQR(emailFormGroup.value)\\\">\\n                                <mat-error\\n                                    *ngIf=\\\"!emailFormGroup.controls.email.valid && emailFormGroup.controls.email.touched\\\">\\n                                    Email is invalid\\n                                </mat-error>\\n                            </mat-form-field><br>\\n                            <mat-form-field style=\\\"width: 100%;\\\">\\n                                <input matInput name=\\\"subject\\\" placeholder=\\\"Subject\\\" formControlName=\\\"subject\\\"\\n                                    (keyup)=\\\"onLinkClick(); emailQR(emailFormGroup.value)\\\">\\n                            </mat-form-field><br>\\n                            <mat-form-field style=\\\"width: 100%;\\\">\\n                                <textarea matInput name=\\\"body\\\" placeholder=\\\"Body\\\" formControlName=\\\"body\\\"\\n                                    (keyup)=\\\"onLinkClick(); emailQR(emailFormGroup.value)\\\">\\n                                    </textarea>\\n                            </mat-form-field><br>\\n                        </form>\\n                    </mat-tab>\\n                    <mat-tab label=\\\"Phone\\\">\\n                        <form [formGroup]=\\\"telFormGroup\\\" style=\\\"padding: 5px\\\">\\n                            <mat-form-field style=\\\"width: 100%;\\\">\\n                                <input matInput name=\\\"tel\\\" placeholder=\\\"Phone number\\\" formControlName=\\\"tel\\\"\\n                                    (keyup)=\\\"onLinkClick(); qrCode = telFormGroup.controls.tel.valid ? 'tel:' + telFormGroup.controls['tel'].value : null;\\\">\\n                                <mat-error\\n                                    *ngIf=\\\"!telFormGroup.controls.tel.valid && telFormGroup.controls.tel.touched\\\">\\n                                    Phone number is invalid\\n                                </mat-error>\\n                            </mat-form-field>\\n                        </form>\\n                    </mat-tab>\\n                    <mat-tab label=\\\"Contact\\\">\\n                        <form [formGroup]=\\\"contactFormGroup\\\" style=\\\"padding: 5px\\\">\\n                            <mat-form-field style=\\\"width: 100%;\\\">\\n                                <input matInput name=\\\"firstName\\\" placeholder=\\\"First Name\\\" formControlName=\\\"firstName\\\"\\n                                    (keyup)=\\\"onLinkClick(); contactQR(contactFormGroup.value)\\\">\\n                            </mat-form-field><br>\\n                            <mat-form-field style=\\\"width: 100%;\\\">\\n                                <input matInput name=\\\"lastName\\\" placeholder=\\\"last Name\\\" formControlName=\\\"lastName\\\"\\n                                    (keyup)=\\\"onLinkClick(); contactQR(contactFormGroup.value)\\\">\\n                            </mat-form-field><br>\\n                            <mat-form-field style=\\\"width: 100%;\\\">\\n                                <input matInput name=\\\"tel\\\" type=\\\"tel\\\" placeholder=\\\"Phone\\\" formControlName=\\\"tel\\\"\\n                                    (keyup)=\\\"onLinkClick(); contactQR(contactFormGroup.value)\\\">\\n                                <mat-error\\n                                    *ngIf=\\\"!contactFormGroup.controls.tel.valid && contactFormGroup.controls.tel.touched\\\">\\n                                    Phone number is invalid\\n                                </mat-error>\\n                            </mat-form-field><br>\\n                            <mat-form-field style=\\\"width: 100%;\\\">\\n                                <input matInput name=\\\"email\\\" type=\\\"email\\\" placeholder=\\\"Email\\\" formControlName=\\\"email\\\"\\n                                    (keyup)=\\\"onLinkClick(); contactQR(contactFormGroup.value)\\\">\\n                                <mat-error\\n                                    *ngIf=\\\"!contactFormGroup.controls.email.valid && contactFormGroup.controls.email.touched\\\">\\n                                    Email is invalid\\n                                </mat-error>\\n                            </mat-form-field>\\n                        </form>\\n                    </mat-tab>\\n                </mat-tab-group>\\n                <div>\\n                    <button type=\\\"button\\\" color=\\\"primary\\\" mat-raised-button (click)=\\\"generateQrCode(false)\\\"\\n                        [disabled]=\\\"!qrCode || qrCode === ''\\\">\\n                        Generate QR Code\\n                    </button>\\n                </div>\\n            </div>\\n            <mat-card class=\\\"downloadQR\\\" gdArea=\\\"content\\\" style=\\\"padding-top: 0;\\\">\\n                <mat-toolbar color=\\\"primary\\\">\\n                    <button mat-icon-button [disabled]=\\\"!downloadQRFlag\\\" style=\\\"color: white;\\\" (click)=\\\"qrDownload()\\\"\\n                        title=\\\"QR Kodunuzu Ãœretin\\\">\\n                        <mat-icon style=\\\"color: white\\\">save_alt</mat-icon> Download\\n                    </button>\\n                    <span fxFlex></span>\\n                    <button mat-icon-button (click)=\\\"openDialog()\\\" title=\\\"Configure your QR code\\\">\\n                        <mat-icon>more_vert</mat-icon>\\n                    </button>\\n                </mat-toolbar>\\n                <div class=\\\"qr-code\\\" #qrCodeEle></div>\\n            </mat-card>\\n        </div>\\n    </mat-card-content>\\n</mat-card>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { StaticQRComponent } from './static-qr.component';\n\nconst routes: Routes = [{ path: '', component: StaticQRComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class StaticQRRoutingModule { }\n","export default \".qr-code {\\n  text-align: center;\\n  padding: 15px 10px;\\n}\\n\\n.mat-card .mat-toolbar {\\n  height: 48px;\\n}\\n\\n::ng-deep .mat-tab-label,\\n::ng-deep .mat-tab-label-active {\\n  min-width: 50px !important;\\n  padding: 3px !important;\\n  margin: 3px !important;\\n}\\n\\n.mat-card-content mat-card.mat-card {\\n  padding: 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc3RhdGljLXFyL0M6XFxVc2Vyc1xcbHljb2RcXERlc2t0b3BcXHFyY29kZWdlblxcYW5ndWxhci9zcmNcXGFwcFxcc3RhdGljLXFyXFxzdGF0aWMtcXIuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3N0YXRpYy1xci9zdGF0aWMtcXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxrQkFBQTtFQUNBLGtCQUFBO0FDQ0o7O0FERUE7RUFDSSxZQUFBO0FDQ0o7O0FERUE7O0VBRUksMEJBQUE7RUFDQSx1QkFBQTtFQUNBLHNCQUFBO0FDQ0o7O0FERUE7RUFDSSxVQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9zdGF0aWMtcXIvc3RhdGljLXFyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnFyLWNvZGUge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBwYWRkaW5nOiAxNXB4IDEwcHg7XG59XG5cbi5tYXQtY2FyZCAubWF0LXRvb2xiYXIge1xuICAgIGhlaWdodDogNDhweDtcbn1cblxuOjpuZy1kZWVwIC5tYXQtdGFiLWxhYmVsLFxuOjpuZy1kZWVwIC5tYXQtdGFiLWxhYmVsLWFjdGl2ZSB7XG4gICAgbWluLXdpZHRoOiA1MHB4ICFpbXBvcnRhbnQ7XG4gICAgcGFkZGluZzogM3B4ICFpbXBvcnRhbnQ7XG4gICAgbWFyZ2luOiAzcHggIWltcG9ydGFudDtcbn1cblxuLm1hdC1jYXJkLWNvbnRlbnQgbWF0LWNhcmQubWF0LWNhcmQge1xuICAgIHBhZGRpbmc6IDA7XG59IiwiLnFyLWNvZGUge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDE1cHggMTBweDtcbn1cblxuLm1hdC1jYXJkIC5tYXQtdG9vbGJhciB7XG4gIGhlaWdodDogNDhweDtcbn1cblxuOjpuZy1kZWVwIC5tYXQtdGFiLWxhYmVsLFxuOjpuZy1kZWVwIC5tYXQtdGFiLWxhYmVsLWFjdGl2ZSB7XG4gIG1pbi13aWR0aDogNTBweCAhaW1wb3J0YW50O1xuICBwYWRkaW5nOiAzcHggIWltcG9ydGFudDtcbiAgbWFyZ2luOiAzcHggIWltcG9ydGFudDtcbn1cblxuLm1hdC1jYXJkLWNvbnRlbnQgbWF0LWNhcmQubWF0LWNhcmQge1xuICBwYWRkaW5nOiAwO1xufSJdfQ== */\"","import { Component, OnInit, AfterViewInit, ViewChild, ElementRef, TemplateRef } from '@angular/core';\nimport { Service } from '../services/api.service';\nimport * as config from '@environments/config';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ConfigQRComponent } from '../shared/qrConfig/qrConfig.component';\ndeclare const QRCode: any;\n\n@Component({\n  selector: 'app-static-qr',\n  templateUrl: './static-qr.component.html',\n  styleUrls: ['./static-qr.component.scss']\n})\nexport class StaticQRComponent implements OnInit, AfterViewInit {\n\n  qrCode = '';\n  loading = false;\n  downloadQRFlag = false;\n  textFormGroup: FormGroup;\n  urlFormGroup: FormGroup;\n  emailFormGroup: FormGroup;\n  telFormGroup: FormGroup;\n  contactFormGroup: FormGroup;\n  tabIndex: number;\n  qrConfigData: any = {\n    width: 256,\n    height: 256,\n    quietZone: 0,\n    colorDark: '#000000',\n    colorLight: '#ffffff',\n    logo: null,\n    logoWidth: null,\n    logoHeight: null,\n    logoBackgroundTransparent: false,\n    logoBackgroundColor: '#ffffff',\n    backgroundImage: null,\n    backgroundImageAlpha: 1,\n    autoColor: false,\n    title: '',\n    // titleFont: null,\n    titleColor: '#000',\n    titleBackgroundColor: '#fff',\n    titleHeight: 0,\n    subTitle: '',\n    // subTitleFont: null,\n    subTitleColor: '#004284',\n  };\n  eQRCode: any;\n\n  // Your DOM Element\n//   @ViewChild('qrConfig', { static: false }) qrConfig: TemplateRef<any>;\n  @ViewChild('qrCodeEle', { static: false }) qrCodeEle: ElementRef;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private service: Service,\n    public router: Router,\n    public snackBar: MatSnackBar,\n    private dialog: MatDialog\n  ) { }\n\n  ngOnInit() {\n    this.createTextForm();\n    this.createURLForm();\n    this.createEmailForm();\n    this.createTelForm();\n    this.createContactForm();\n    // this.onChanges();\n  }\n\n  ngAfterViewInit() {\n    // Options\n    this.eQRCode = new QRCode(this.qrCodeEle.nativeElement, { text: ''});\n  }\n\n  createTextForm() {\n    this.textFormGroup = this.formBuilder.group({\n      text: [null]\n    });\n  }\n\n  createURLForm() {\n    this.urlFormGroup = this.formBuilder.group({\n      url: [null, Validators.pattern(config.urlReg)]\n    });\n  }\n\n  createEmailForm() {\n    this.emailFormGroup = this.formBuilder.group({\n      email: [null, [Validators.required, Validators.pattern(config.emailregex)]],\n      subject: [null, [Validators.required]],\n      body: [null, [Validators.required]]\n    });\n  }\n\n  createTelForm() {\n    this.telFormGroup = this.formBuilder.group({\n      tel: [null, Validators.pattern(config.telReg)]\n    });\n  }\n\n  createContactForm() {\n    this.contactFormGroup = this.formBuilder.group({\n      firstName: [null, Validators.required],\n      lastName: [null, Validators.required],\n      tel: [null, [Validators.required, Validators.pattern(config.telReg)]],\n      email: [null, Validators.pattern(config.emailregex)],\n      url: [null, Validators.pattern(config.urlReg)]\n    });\n  }\n\n  onLinkClick() {\n    if (this.tabIndex === 0\n      && (\n        this.textFormGroup.dirty\n      )) {\n      this.createURLForm();\n      this.createTelForm();\n      this.createEmailForm();\n      this.createContactForm();\n    } else if (this.tabIndex === 1\n      && (\n        this.urlFormGroup.dirty\n      )) {\n      this.createTextForm();\n      this.createTelForm();\n      this.createEmailForm();\n      this.createContactForm();\n    } else if (this.tabIndex === 2\n      && (\n        this.emailFormGroup.dirty\n      )) {\n      this.createTextForm();\n      this.createURLForm();\n      this.createTelForm();\n      this.createContactForm();\n    } else if (this.tabIndex === 3\n      && (\n        this.telFormGroup.dirty\n      )) {\n      this.createTextForm();\n      this.createURLForm();\n      this.createEmailForm();\n      this.createContactForm();\n    } else if (this.tabIndex === 4\n      && (\n        this.contactFormGroup.dirty\n      )) {\n      this.createTextForm();\n      this.createURLForm();\n      this.createEmailForm();\n      this.createTelForm();\n    }\n  }\n\n  emailQR(val: any) {\n    if (this.emailFormGroup.valid) {\n      this.qrCode = `MATMSG:TO:${val.email};SUB:${val.subject};BODY:${val.body};;`;\n    }\n  }\n\n  contactQR(val: any) {\n    if (this.contactFormGroup.valid) {\n      this.qrCode = null;\n\n      this.qrCode = `MECARD:N:${val.firstName},${val.lastName};TEL:${val.tel};`;\n      if (val.email !== null && this.qrCode !== null && this.qrCode !== '') {\n        this.qrCode += `;EMAIL:'${val.email}`;\n      }\n      if (val.url !== null && this.qrCode !== null && this.qrCode !== '') {\n        this.qrCode += `;URL:${val.url}`;\n      }\n      if (this.qrCode !== null && this.qrCode !== '') {\n        this.qrCode += ';;';\n      }\n    } else {\n      this.qrCode = null;\n    }\n  }\n\n  openDialog() {\n    const dialogRef = this.dialog.open(ConfigQRComponent, {\n      height: 'auto',\n      width: '500px',\n      data: this.qrConfigData\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.qrConfigData = result;\n        this.generateQrCode(true);\n      }\n    });\n  }\n\n  generateQrCode(reGenerateFlag: boolean) {\n    if (this.qrConfigData) {\n      if (reGenerateFlag) {\n        // Options\n        this.eQRCode.clear();\n        const options = this.qrConfigData;\n        options.text = this.qrCode;\n        this.eQRCode = new QRCode(this.qrCodeEle.nativeElement, options);\n      } else {\n        this.eQRCode.makeCode(this.qrCode);\n      }\n      this.downloadQRFlag = true;\n    }\n  }\n\n  qrDownload() {\n    const link = document.createElement('a');\n    link.id = 'downloadLink';\n    link.download = 'QR image';\n    link.href = this.qrCodeEle.nativeElement.lastElementChild.src;\n    link.style.display = 'none';\n    document.body.appendChild(link);\n    link.click();\n    document.getElementById('downloadLink').remove();\n  }\n\n  createDynamicQR() {\n    if (!this.service.getLocalStorage('authToken')) {\n      this.router.navigate(['auth/login']);\n    } else {\n      const data = {\n        qrName: '',\n        qrCodeType: '',\n        qrCodeContent: null\n      };\n      switch (this.tabIndex) {\n        case 1:\n          if (!this.urlFormGroup.valid) {\n            return;\n          } else {\n            data.qrCodeType = 'url';\n            data.qrCodeContent = this.urlFormGroup.controls.url.value;\n          }\n          break;\n        case 2:\n          if (!this.emailFormGroup.valid) {\n            return;\n          } else {\n            data.qrCodeType = 'email';\n            data.qrCodeContent = this.emailFormGroup.controls.value;\n          }\n          break;\n        case 3:\n          if (!this.telFormGroup.valid) {\n            return;\n          } else {\n            data.qrCodeType = 'tel';\n            data.qrCodeContent = this.telFormGroup.controls.tel.value;\n          }\n          break;\n        case 4:\n          if (!this.contactFormGroup.valid) {\n            return;\n          } else {\n            data.qrCodeType = 'contact';\n            data.qrCodeContent = this.contactFormGroup.value;\n          }\n          break;\n        default:\n          data.qrCodeType = 'text';\n          data.qrCodeContent = this.textFormGroup.controls.text.value;\n          break;\n      }\n      this.service.makeAPICall(this.service.postMethod, this.service.createEditDynamicURL, data, (response) => {\n        this.loading = false;\n        if (response.code !== 0) {\n          if (response.code === 200) {\n            const navigate = 'dashboard/code/' + response.data._id;\n            this.router.navigate([navigate]);\n          } else {\n            config.flash(this.snackBar, response.message);\n          }\n        }\n      });\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { StaticQRRoutingModule } from './static-qr-routing.module';\nimport { StaticQRComponent } from './static-qr.component';\n\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  declarations: [StaticQRComponent],\n  imports: [\n    CommonModule,\n    StaticQRRoutingModule,\n    ReactiveFormsModule,\n    SharedModule,\n  ]\n})\nexport class StaticQRModule { }\n"],"sourceRoot":"webpack:///"}